'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DS_SISTAGRI"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DS_SISTAGRI
    Inherits Global.System.Data.DataSet
    
    Private tableFICHA_TECNICA_LOTE As FICHA_TECNICA_LOTEDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("FICHA_TECNICA_LOTE")) Is Nothing) Then
                MyBase.Tables.Add(New FICHA_TECNICA_LOTEDataTable(ds.Tables("FICHA_TECNICA_LOTE")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FICHA_TECNICA_LOTE() As FICHA_TECNICA_LOTEDataTable
        Get
            Return Me.tableFICHA_TECNICA_LOTE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DS_SISTAGRI = CType(MyBase.Clone,DS_SISTAGRI)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("FICHA_TECNICA_LOTE")) Is Nothing) Then
                MyBase.Tables.Add(New FICHA_TECNICA_LOTEDataTable(ds.Tables("FICHA_TECNICA_LOTE")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableFICHA_TECNICA_LOTE = CType(MyBase.Tables("FICHA_TECNICA_LOTE"),FICHA_TECNICA_LOTEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFICHA_TECNICA_LOTE) Is Nothing) Then
                Me.tableFICHA_TECNICA_LOTE.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DS_SISTAGRI"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DS_SISTAGRI.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableFICHA_TECNICA_LOTE = New FICHA_TECNICA_LOTEDataTable()
        MyBase.Tables.Add(Me.tableFICHA_TECNICA_LOTE)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeFICHA_TECNICA_LOTE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DS_SISTAGRI = New DS_SISTAGRI()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub FICHA_TECNICA_LOTERowChangeEventHandler(ByVal sender As Object, ByVal e As FICHA_TECNICA_LOTERowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FICHA_TECNICA_LOTEDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnID_MAESTRO As Global.System.Data.DataColumn
        
        Private columnDEPARTAMENTO As Global.System.Data.DataColumn
        
        Private columnMUNICIPIO As Global.System.Data.DataColumn
        
        Private columnCANTON As Global.System.Data.DataColumn
        
        Private columnZONA As Global.System.Data.DataColumn
        
        Private columnSUB_ZONA As Global.System.Data.DataColumn
        
        Private columnCODIPROVEEDOR As Global.System.Data.DataColumn
        
        Private columnCORRELATIVO As Global.System.Data.DataColumn
        
        Private columnNOMBRE_LOTE As Global.System.Data.DataColumn
        
        Private columnNO_CONTRATO As Global.System.Data.DataColumn
        
        Private columnVIGENTE As Global.System.Data.DataColumn
        
        Private columnZAFRA_INICIO As Global.System.Data.DataColumn
        
        Private columnZAFRA_FIN As Global.System.Data.DataColumn
        
        Private columnAREA_TOTAL As Global.System.Data.DataColumn
        
        Private columnAREA_CULTIVA As Global.System.Data.DataColumn
        
        Private columnTC_MZ As Global.System.Data.DataColumn
        
        Private columnLBS_TC As Global.System.Data.DataColumn
        
        Private columnHACIENDA As Global.System.Data.DataColumn
        
        Private columnVIGENCIA_ARREND As Global.System.Data.DataColumn
        
        Private columnVARIEDAD As Global.System.Data.DataColumn
        
        Private columnCICLO As Global.System.Data.DataColumn
        
        Private columnTIPO_SIEMBRA As Global.System.Data.DataColumn
        
        Private columnEPOCA_SIEMBRA As Global.System.Data.DataColumn
        
        Private columnSIEMBRA_MANUAL As Global.System.Data.DataColumn
        
        Private columnSIEMBRA_MECANI As Global.System.Data.DataColumn
        
        Private columnORIGEN_CANA As Global.System.Data.DataColumn
        
        Private columnPORC_DESPOBLACION As Global.System.Data.DataColumn
        
        Private columnFECULT_RESIEMBRA As Global.System.Data.DataColumn
        
        Private columnTOTAL_MZS As Global.System.Data.DataColumn
        
        Private columnTIPO_SUELO As Global.System.Data.DataColumn
        
        Private columnPRODUC_TIPO_SUELO As Global.System.Data.DataColumn
        
        Private columnMSNM As Global.System.Data.DataColumn
        
        Private columnFECULT_SIEMBRA As Global.System.Data.DataColumn
        
        Private columnFEPROX_SIEMBRA As Global.System.Data.DataColumn
        
        Private columnFECULT_CORTE As Global.System.Data.DataColumn
        
        Private columnFECPROX_CORTE As Global.System.Data.DataColumn
        
        Private columnRIESGO_PIEDRA As Global.System.Data.DataColumn
        
        Private columnACCESO_PROPIO As Global.System.Data.DataColumn
        
        Private columnREPARA_HABILITA As Global.System.Data.DataColumn
        
        Private columnCOSECHA_MANUAL_MZ As Global.System.Data.DataColumn
        
        Private columnFRENTE_ROZA As Global.System.Data.DataColumn
        
        Private columnCOSECHA_MECANI_MZ As Global.System.Data.DataColumn
        
        Private columnCOSECHA_QUEMA_MZ As Global.System.Data.DataColumn
        
        Private columnCOSECHA_VERDE_MZ As Global.System.Data.DataColumn
        
        Private columnCAT_CANA_LARGA As Global.System.Data.DataColumn
        
        Private columnTARIFA_ROZA_MANUAL_TC As Global.System.Data.DataColumn
        
        Private columnTARIFA_ALZA_TC As Global.System.Data.DataColumn
        
        Private columnTARIFA_TRANSP_LARGA_TC As Global.System.Data.DataColumn
        
        Private columnCAT_CANA_MECA As Global.System.Data.DataColumn
        
        Private columnTARIFA_COSECHADORA As Global.System.Data.DataColumn
        
        Private columnTARIFA_TRANSP_MECA_TC As Global.System.Data.DataColumn
        
        Private columnDISTANCIA_KMS As Global.System.Data.DataColumn
        
        Private columnPAVIMENTADA_KMS As Global.System.Data.DataColumn
        
        Private columnTIERRA_BALASTRE As Global.System.Data.DataColumn
        
        Private columnTECNICO As Global.System.Data.DataColumn
        
        Private columnC_ZAFRA As Global.System.Data.DataColumn
        
        Private columnCONTRA_AREA As Global.System.Data.DataColumn
        
        Private columnCONTRA_TC As Global.System.Data.DataColumn
        
        Private columnCONTRA_TC_MZ As Global.System.Data.DataColumn
        
        Private columnCONTRA_LBS_TC As Global.System.Data.DataColumn
        
        Private columnEJEC_AREA As Global.System.Data.DataColumn
        
        Private columnEJEC_TC As Global.System.Data.DataColumn
        
        Private columnEJEC_TC_MZ As Global.System.Data.DataColumn
        
        Private columnEJEC_LBS_TC As Global.System.Data.DataColumn
        
        Private columnSEMILLA_TC As Global.System.Data.DataColumn
        
        Private columnPRODUCTOR As Global.System.Data.DataColumn
        
        Private columnLOTE_PROPIO As Global.System.Data.DataColumn
        
        Private columnLOTE_ARRENDADO As Global.System.Data.DataColumn
        
        Private columnOBSERVACIONES As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FICHA_TECNICA_LOTE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ID_MAESTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_MAESTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DEPARTAMENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEPARTAMENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MUNICIPIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMUNICIPIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CANTONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ZONAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZONA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SUB_ZONAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUB_ZONA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CODIPROVEEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIPROVEEDOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CORRELATIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCORRELATIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NOMBRE_LOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE_LOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NO_CONTRATOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_CONTRATO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VIGENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIGENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ZAFRA_INICIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZAFRA_INICIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ZAFRA_FINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZAFRA_FIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AREA_TOTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAREA_TOTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AREA_CULTIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAREA_CULTIVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TC_MZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTC_MZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LBS_TCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLBS_TC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property HACIENDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHACIENDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VIGENCIA_ARRENDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIGENCIA_ARREND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VARIEDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVARIEDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CICLOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCICLO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TIPO_SIEMBRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_SIEMBRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EPOCA_SIEMBRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEPOCA_SIEMBRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SIEMBRA_MANUALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIEMBRA_MANUAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SIEMBRA_MECANIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIEMBRA_MECANI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ORIGEN_CANAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORIGEN_CANA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PORC_DESPOBLACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPORC_DESPOBLACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FECULT_RESIEMBRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECULT_RESIEMBRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TOTAL_MZSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTAL_MZS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TIPO_SUELOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_SUELO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PRODUC_TIPO_SUELOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUC_TIPO_SUELO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MSNMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMSNM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FECULT_SIEMBRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECULT_SIEMBRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FEPROX_SIEMBRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFEPROX_SIEMBRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FECULT_CORTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECULT_CORTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FECPROX_CORTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECPROX_CORTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RIESGO_PIEDRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIESGO_PIEDRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ACCESO_PROPIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACCESO_PROPIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property REPARA_HABILITAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREPARA_HABILITA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property COSECHA_MANUAL_MZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSECHA_MANUAL_MZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FRENTE_ROZAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFRENTE_ROZA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property COSECHA_MECANI_MZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSECHA_MECANI_MZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property COSECHA_QUEMA_MZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSECHA_QUEMA_MZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property COSECHA_VERDE_MZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSECHA_VERDE_MZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CAT_CANA_LARGAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAT_CANA_LARGA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TARIFA_ROZA_MANUAL_TCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTARIFA_ROZA_MANUAL_TC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TARIFA_ALZA_TCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTARIFA_ALZA_TC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TARIFA_TRANSP_LARGA_TCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTARIFA_TRANSP_LARGA_TC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CAT_CANA_MECAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAT_CANA_MECA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TARIFA_COSECHADORAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTARIFA_COSECHADORA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TARIFA_TRANSP_MECA_TCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTARIFA_TRANSP_MECA_TC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DISTANCIA_KMSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISTANCIA_KMS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PAVIMENTADA_KMSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAVIMENTADA_KMS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TIERRA_BALASTREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIERRA_BALASTRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TECNICOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTECNICO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property C_ZAFRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_ZAFRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CONTRA_AREAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTRA_AREA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CONTRA_TCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTRA_TC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CONTRA_TC_MZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTRA_TC_MZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CONTRA_LBS_TCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTRA_LBS_TC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EJEC_AREAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEJEC_AREA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EJEC_TCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEJEC_TC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EJEC_TC_MZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEJEC_TC_MZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EJEC_LBS_TCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEJEC_LBS_TC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SEMILLA_TCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEMILLA_TC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PRODUCTORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LOTE_PROPIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOTE_PROPIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LOTE_ARRENDADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOTE_ARRENDADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OBSERVACIONESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSERVACIONES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FICHA_TECNICA_LOTERow
            Get
                Return CType(Me.Rows(index),FICHA_TECNICA_LOTERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event FICHA_TECNICA_LOTERowChanging As FICHA_TECNICA_LOTERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event FICHA_TECNICA_LOTERowChanged As FICHA_TECNICA_LOTERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event FICHA_TECNICA_LOTERowDeleting As FICHA_TECNICA_LOTERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event FICHA_TECNICA_LOTERowDeleted As FICHA_TECNICA_LOTERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddFICHA_TECNICA_LOTERow(ByVal row As FICHA_TECNICA_LOTERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddFICHA_TECNICA_LOTERow( _
                    ByVal ID_MAESTRO As Integer,  _
                    ByVal DEPARTAMENTO As String,  _
                    ByVal MUNICIPIO As String,  _
                    ByVal CANTON As String,  _
                    ByVal ZONA As String,  _
                    ByVal SUB_ZONA As String,  _
                    ByVal CODIPROVEEDOR As String,  _
                    ByVal CORRELATIVO As String,  _
                    ByVal NOMBRE_LOTE As String,  _
                    ByVal NO_CONTRATO As Integer,  _
                    ByVal VIGENTE As String,  _
                    ByVal ZAFRA_INICIO As String,  _
                    ByVal ZAFRA_FIN As String,  _
                    ByVal AREA_TOTAL As Decimal,  _
                    ByVal AREA_CULTIVA As Decimal,  _
                    ByVal TC_MZ As Decimal,  _
                    ByVal LBS_TC As Decimal,  _
                    ByVal HACIENDA As String,  _
                    ByVal VIGENCIA_ARREND As Date,  _
                    ByVal VARIEDAD As String,  _
                    ByVal CICLO As Integer,  _
                    ByVal TIPO_SIEMBRA As String,  _
                    ByVal EPOCA_SIEMBRA As String,  _
                    ByVal SIEMBRA_MANUAL As String,  _
                    ByVal SIEMBRA_MECANI As String,  _
                    ByVal ORIGEN_CANA As String,  _
                    ByVal PORC_DESPOBLACION As Decimal,  _
                    ByVal FECULT_RESIEMBRA As Date,  _
                    ByVal TOTAL_MZS As Decimal,  _
                    ByVal TIPO_SUELO As String,  _
                    ByVal PRODUC_TIPO_SUELO As String,  _
                    ByVal MSNM As Decimal,  _
                    ByVal FECULT_SIEMBRA As Date,  _
                    ByVal FEPROX_SIEMBRA As Date,  _
                    ByVal FECULT_CORTE As Date,  _
                    ByVal FECPROX_CORTE As Date,  _
                    ByVal RIESGO_PIEDRA As String,  _
                    ByVal ACCESO_PROPIO As String,  _
                    ByVal REPARA_HABILITA As String,  _
                    ByVal COSECHA_MANUAL_MZ As Decimal,  _
                    ByVal FRENTE_ROZA As String,  _
                    ByVal COSECHA_MECANI_MZ As Decimal,  _
                    ByVal COSECHA_QUEMA_MZ As Decimal,  _
                    ByVal COSECHA_VERDE_MZ As Decimal,  _
                    ByVal CAT_CANA_LARGA As Decimal,  _
                    ByVal TARIFA_ROZA_MANUAL_TC As Decimal,  _
                    ByVal TARIFA_ALZA_TC As Decimal,  _
                    ByVal TARIFA_TRANSP_LARGA_TC As Decimal,  _
                    ByVal CAT_CANA_MECA As Decimal,  _
                    ByVal TARIFA_COSECHADORA As Decimal,  _
                    ByVal TARIFA_TRANSP_MECA_TC As Decimal,  _
                    ByVal DISTANCIA_KMS As Decimal,  _
                    ByVal PAVIMENTADA_KMS As Decimal,  _
                    ByVal TIERRA_BALASTRE As String,  _
                    ByVal TECNICO As String,  _
                    ByVal C_ZAFRA As String,  _
                    ByVal CONTRA_AREA As Decimal,  _
                    ByVal CONTRA_TC As Decimal,  _
                    ByVal CONTRA_TC_MZ As Decimal,  _
                    ByVal CONTRA_LBS_TC As Decimal,  _
                    ByVal EJEC_AREA As Decimal,  _
                    ByVal EJEC_TC As Decimal,  _
                    ByVal EJEC_TC_MZ As Decimal,  _
                    ByVal EJEC_LBS_TC As Decimal,  _
                    ByVal SEMILLA_TC As Decimal,  _
                    ByVal PRODUCTOR As String,  _
                    ByVal LOTE_PROPIO As String,  _
                    ByVal LOTE_ARRENDADO As String,  _
                    ByVal OBSERVACIONES As String) As FICHA_TECNICA_LOTERow
            Dim rowFICHA_TECNICA_LOTERow As FICHA_TECNICA_LOTERow = CType(Me.NewRow,FICHA_TECNICA_LOTERow)
            Dim columnValuesArray() As Object = New Object() {ID_MAESTRO, DEPARTAMENTO, MUNICIPIO, CANTON, ZONA, SUB_ZONA, CODIPROVEEDOR, CORRELATIVO, NOMBRE_LOTE, NO_CONTRATO, VIGENTE, ZAFRA_INICIO, ZAFRA_FIN, AREA_TOTAL, AREA_CULTIVA, TC_MZ, LBS_TC, HACIENDA, VIGENCIA_ARREND, VARIEDAD, CICLO, TIPO_SIEMBRA, EPOCA_SIEMBRA, SIEMBRA_MANUAL, SIEMBRA_MECANI, ORIGEN_CANA, PORC_DESPOBLACION, FECULT_RESIEMBRA, TOTAL_MZS, TIPO_SUELO, PRODUC_TIPO_SUELO, MSNM, FECULT_SIEMBRA, FEPROX_SIEMBRA, FECULT_CORTE, FECPROX_CORTE, RIESGO_PIEDRA, ACCESO_PROPIO, REPARA_HABILITA, COSECHA_MANUAL_MZ, FRENTE_ROZA, COSECHA_MECANI_MZ, COSECHA_QUEMA_MZ, COSECHA_VERDE_MZ, CAT_CANA_LARGA, TARIFA_ROZA_MANUAL_TC, TARIFA_ALZA_TC, TARIFA_TRANSP_LARGA_TC, CAT_CANA_MECA, TARIFA_COSECHADORA, TARIFA_TRANSP_MECA_TC, DISTANCIA_KMS, PAVIMENTADA_KMS, TIERRA_BALASTRE, TECNICO, C_ZAFRA, CONTRA_AREA, CONTRA_TC, CONTRA_TC_MZ, CONTRA_LBS_TC, EJEC_AREA, EJEC_TC, EJEC_TC_MZ, EJEC_LBS_TC, SEMILLA_TC, PRODUCTOR, LOTE_PROPIO, LOTE_ARRENDADO, OBSERVACIONES}
            rowFICHA_TECNICA_LOTERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFICHA_TECNICA_LOTERow)
            Return rowFICHA_TECNICA_LOTERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FICHA_TECNICA_LOTEDataTable = CType(MyBase.Clone,FICHA_TECNICA_LOTEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FICHA_TECNICA_LOTEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_MAESTRO = MyBase.Columns("ID_MAESTRO")
            Me.columnDEPARTAMENTO = MyBase.Columns("DEPARTAMENTO")
            Me.columnMUNICIPIO = MyBase.Columns("MUNICIPIO")
            Me.columnCANTON = MyBase.Columns("CANTON")
            Me.columnZONA = MyBase.Columns("ZONA")
            Me.columnSUB_ZONA = MyBase.Columns("SUB_ZONA")
            Me.columnCODIPROVEEDOR = MyBase.Columns("CODIPROVEEDOR")
            Me.columnCORRELATIVO = MyBase.Columns("CORRELATIVO")
            Me.columnNOMBRE_LOTE = MyBase.Columns("NOMBRE_LOTE")
            Me.columnNO_CONTRATO = MyBase.Columns("NO_CONTRATO")
            Me.columnVIGENTE = MyBase.Columns("VIGENTE")
            Me.columnZAFRA_INICIO = MyBase.Columns("ZAFRA_INICIO")
            Me.columnZAFRA_FIN = MyBase.Columns("ZAFRA_FIN")
            Me.columnAREA_TOTAL = MyBase.Columns("AREA_TOTAL")
            Me.columnAREA_CULTIVA = MyBase.Columns("AREA_CULTIVA")
            Me.columnTC_MZ = MyBase.Columns("TC_MZ")
            Me.columnLBS_TC = MyBase.Columns("LBS_TC")
            Me.columnHACIENDA = MyBase.Columns("HACIENDA")
            Me.columnVIGENCIA_ARREND = MyBase.Columns("VIGENCIA_ARREND")
            Me.columnVARIEDAD = MyBase.Columns("VARIEDAD")
            Me.columnCICLO = MyBase.Columns("CICLO")
            Me.columnTIPO_SIEMBRA = MyBase.Columns("TIPO_SIEMBRA")
            Me.columnEPOCA_SIEMBRA = MyBase.Columns("EPOCA_SIEMBRA")
            Me.columnSIEMBRA_MANUAL = MyBase.Columns("SIEMBRA_MANUAL")
            Me.columnSIEMBRA_MECANI = MyBase.Columns("SIEMBRA_MECANI")
            Me.columnORIGEN_CANA = MyBase.Columns("ORIGEN_CANA")
            Me.columnPORC_DESPOBLACION = MyBase.Columns("PORC_DESPOBLACION")
            Me.columnFECULT_RESIEMBRA = MyBase.Columns("FECULT_RESIEMBRA")
            Me.columnTOTAL_MZS = MyBase.Columns("TOTAL_MZS")
            Me.columnTIPO_SUELO = MyBase.Columns("TIPO_SUELO")
            Me.columnPRODUC_TIPO_SUELO = MyBase.Columns("PRODUC_TIPO_SUELO")
            Me.columnMSNM = MyBase.Columns("MSNM")
            Me.columnFECULT_SIEMBRA = MyBase.Columns("FECULT_SIEMBRA")
            Me.columnFEPROX_SIEMBRA = MyBase.Columns("FEPROX_SIEMBRA")
            Me.columnFECULT_CORTE = MyBase.Columns("FECULT_CORTE")
            Me.columnFECPROX_CORTE = MyBase.Columns("FECPROX_CORTE")
            Me.columnRIESGO_PIEDRA = MyBase.Columns("RIESGO_PIEDRA")
            Me.columnACCESO_PROPIO = MyBase.Columns("ACCESO_PROPIO")
            Me.columnREPARA_HABILITA = MyBase.Columns("REPARA_HABILITA")
            Me.columnCOSECHA_MANUAL_MZ = MyBase.Columns("COSECHA_MANUAL_MZ")
            Me.columnFRENTE_ROZA = MyBase.Columns("FRENTE_ROZA")
            Me.columnCOSECHA_MECANI_MZ = MyBase.Columns("COSECHA_MECANI_MZ")
            Me.columnCOSECHA_QUEMA_MZ = MyBase.Columns("COSECHA_QUEMA_MZ")
            Me.columnCOSECHA_VERDE_MZ = MyBase.Columns("COSECHA_VERDE_MZ")
            Me.columnCAT_CANA_LARGA = MyBase.Columns("CAT_CANA_LARGA")
            Me.columnTARIFA_ROZA_MANUAL_TC = MyBase.Columns("TARIFA_ROZA_MANUAL_TC")
            Me.columnTARIFA_ALZA_TC = MyBase.Columns("TARIFA_ALZA_TC")
            Me.columnTARIFA_TRANSP_LARGA_TC = MyBase.Columns("TARIFA_TRANSP_LARGA_TC")
            Me.columnCAT_CANA_MECA = MyBase.Columns("CAT_CANA_MECA")
            Me.columnTARIFA_COSECHADORA = MyBase.Columns("TARIFA_COSECHADORA")
            Me.columnTARIFA_TRANSP_MECA_TC = MyBase.Columns("TARIFA_TRANSP_MECA_TC")
            Me.columnDISTANCIA_KMS = MyBase.Columns("DISTANCIA_KMS")
            Me.columnPAVIMENTADA_KMS = MyBase.Columns("PAVIMENTADA_KMS")
            Me.columnTIERRA_BALASTRE = MyBase.Columns("TIERRA_BALASTRE")
            Me.columnTECNICO = MyBase.Columns("TECNICO")
            Me.columnC_ZAFRA = MyBase.Columns("C_ZAFRA")
            Me.columnCONTRA_AREA = MyBase.Columns("CONTRA_AREA")
            Me.columnCONTRA_TC = MyBase.Columns("CONTRA_TC")
            Me.columnCONTRA_TC_MZ = MyBase.Columns("CONTRA_TC_MZ")
            Me.columnCONTRA_LBS_TC = MyBase.Columns("CONTRA_LBS_TC")
            Me.columnEJEC_AREA = MyBase.Columns("EJEC_AREA")
            Me.columnEJEC_TC = MyBase.Columns("EJEC_TC")
            Me.columnEJEC_TC_MZ = MyBase.Columns("EJEC_TC_MZ")
            Me.columnEJEC_LBS_TC = MyBase.Columns("EJEC_LBS_TC")
            Me.columnSEMILLA_TC = MyBase.Columns("SEMILLA_TC")
            Me.columnPRODUCTOR = MyBase.Columns("PRODUCTOR")
            Me.columnLOTE_PROPIO = MyBase.Columns("LOTE_PROPIO")
            Me.columnLOTE_ARRENDADO = MyBase.Columns("LOTE_ARRENDADO")
            Me.columnOBSERVACIONES = MyBase.Columns("OBSERVACIONES")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_MAESTRO = New Global.System.Data.DataColumn("ID_MAESTRO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_MAESTRO)
            Me.columnDEPARTAMENTO = New Global.System.Data.DataColumn("DEPARTAMENTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEPARTAMENTO)
            Me.columnMUNICIPIO = New Global.System.Data.DataColumn("MUNICIPIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMUNICIPIO)
            Me.columnCANTON = New Global.System.Data.DataColumn("CANTON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTON)
            Me.columnZONA = New Global.System.Data.DataColumn("ZONA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZONA)
            Me.columnSUB_ZONA = New Global.System.Data.DataColumn("SUB_ZONA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUB_ZONA)
            Me.columnCODIPROVEEDOR = New Global.System.Data.DataColumn("CODIPROVEEDOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIPROVEEDOR)
            Me.columnCORRELATIVO = New Global.System.Data.DataColumn("CORRELATIVO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCORRELATIVO)
            Me.columnNOMBRE_LOTE = New Global.System.Data.DataColumn("NOMBRE_LOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE_LOTE)
            Me.columnNO_CONTRATO = New Global.System.Data.DataColumn("NO_CONTRATO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_CONTRATO)
            Me.columnVIGENTE = New Global.System.Data.DataColumn("VIGENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIGENTE)
            Me.columnZAFRA_INICIO = New Global.System.Data.DataColumn("ZAFRA_INICIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZAFRA_INICIO)
            Me.columnZAFRA_FIN = New Global.System.Data.DataColumn("ZAFRA_FIN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZAFRA_FIN)
            Me.columnAREA_TOTAL = New Global.System.Data.DataColumn("AREA_TOTAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAREA_TOTAL)
            Me.columnAREA_CULTIVA = New Global.System.Data.DataColumn("AREA_CULTIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAREA_CULTIVA)
            Me.columnTC_MZ = New Global.System.Data.DataColumn("TC_MZ", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTC_MZ)
            Me.columnLBS_TC = New Global.System.Data.DataColumn("LBS_TC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLBS_TC)
            Me.columnHACIENDA = New Global.System.Data.DataColumn("HACIENDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHACIENDA)
            Me.columnVIGENCIA_ARREND = New Global.System.Data.DataColumn("VIGENCIA_ARREND", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIGENCIA_ARREND)
            Me.columnVARIEDAD = New Global.System.Data.DataColumn("VARIEDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVARIEDAD)
            Me.columnCICLO = New Global.System.Data.DataColumn("CICLO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCICLO)
            Me.columnTIPO_SIEMBRA = New Global.System.Data.DataColumn("TIPO_SIEMBRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_SIEMBRA)
            Me.columnEPOCA_SIEMBRA = New Global.System.Data.DataColumn("EPOCA_SIEMBRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEPOCA_SIEMBRA)
            Me.columnSIEMBRA_MANUAL = New Global.System.Data.DataColumn("SIEMBRA_MANUAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIEMBRA_MANUAL)
            Me.columnSIEMBRA_MECANI = New Global.System.Data.DataColumn("SIEMBRA_MECANI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIEMBRA_MECANI)
            Me.columnORIGEN_CANA = New Global.System.Data.DataColumn("ORIGEN_CANA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORIGEN_CANA)
            Me.columnPORC_DESPOBLACION = New Global.System.Data.DataColumn("PORC_DESPOBLACION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPORC_DESPOBLACION)
            Me.columnFECULT_RESIEMBRA = New Global.System.Data.DataColumn("FECULT_RESIEMBRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECULT_RESIEMBRA)
            Me.columnTOTAL_MZS = New Global.System.Data.DataColumn("TOTAL_MZS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTAL_MZS)
            Me.columnTIPO_SUELO = New Global.System.Data.DataColumn("TIPO_SUELO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_SUELO)
            Me.columnPRODUC_TIPO_SUELO = New Global.System.Data.DataColumn("PRODUC_TIPO_SUELO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUC_TIPO_SUELO)
            Me.columnMSNM = New Global.System.Data.DataColumn("MSNM", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMSNM)
            Me.columnFECULT_SIEMBRA = New Global.System.Data.DataColumn("FECULT_SIEMBRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECULT_SIEMBRA)
            Me.columnFEPROX_SIEMBRA = New Global.System.Data.DataColumn("FEPROX_SIEMBRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFEPROX_SIEMBRA)
            Me.columnFECULT_CORTE = New Global.System.Data.DataColumn("FECULT_CORTE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECULT_CORTE)
            Me.columnFECPROX_CORTE = New Global.System.Data.DataColumn("FECPROX_CORTE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECPROX_CORTE)
            Me.columnRIESGO_PIEDRA = New Global.System.Data.DataColumn("RIESGO_PIEDRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIESGO_PIEDRA)
            Me.columnACCESO_PROPIO = New Global.System.Data.DataColumn("ACCESO_PROPIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCESO_PROPIO)
            Me.columnREPARA_HABILITA = New Global.System.Data.DataColumn("REPARA_HABILITA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREPARA_HABILITA)
            Me.columnCOSECHA_MANUAL_MZ = New Global.System.Data.DataColumn("COSECHA_MANUAL_MZ", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSECHA_MANUAL_MZ)
            Me.columnFRENTE_ROZA = New Global.System.Data.DataColumn("FRENTE_ROZA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFRENTE_ROZA)
            Me.columnCOSECHA_MECANI_MZ = New Global.System.Data.DataColumn("COSECHA_MECANI_MZ", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSECHA_MECANI_MZ)
            Me.columnCOSECHA_QUEMA_MZ = New Global.System.Data.DataColumn("COSECHA_QUEMA_MZ", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSECHA_QUEMA_MZ)
            Me.columnCOSECHA_VERDE_MZ = New Global.System.Data.DataColumn("COSECHA_VERDE_MZ", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSECHA_VERDE_MZ)
            Me.columnCAT_CANA_LARGA = New Global.System.Data.DataColumn("CAT_CANA_LARGA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAT_CANA_LARGA)
            Me.columnTARIFA_ROZA_MANUAL_TC = New Global.System.Data.DataColumn("TARIFA_ROZA_MANUAL_TC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTARIFA_ROZA_MANUAL_TC)
            Me.columnTARIFA_ALZA_TC = New Global.System.Data.DataColumn("TARIFA_ALZA_TC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTARIFA_ALZA_TC)
            Me.columnTARIFA_TRANSP_LARGA_TC = New Global.System.Data.DataColumn("TARIFA_TRANSP_LARGA_TC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTARIFA_TRANSP_LARGA_TC)
            Me.columnCAT_CANA_MECA = New Global.System.Data.DataColumn("CAT_CANA_MECA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAT_CANA_MECA)
            Me.columnTARIFA_COSECHADORA = New Global.System.Data.DataColumn("TARIFA_COSECHADORA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTARIFA_COSECHADORA)
            Me.columnTARIFA_TRANSP_MECA_TC = New Global.System.Data.DataColumn("TARIFA_TRANSP_MECA_TC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTARIFA_TRANSP_MECA_TC)
            Me.columnDISTANCIA_KMS = New Global.System.Data.DataColumn("DISTANCIA_KMS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISTANCIA_KMS)
            Me.columnPAVIMENTADA_KMS = New Global.System.Data.DataColumn("PAVIMENTADA_KMS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAVIMENTADA_KMS)
            Me.columnTIERRA_BALASTRE = New Global.System.Data.DataColumn("TIERRA_BALASTRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIERRA_BALASTRE)
            Me.columnTECNICO = New Global.System.Data.DataColumn("TECNICO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTECNICO)
            Me.columnC_ZAFRA = New Global.System.Data.DataColumn("C_ZAFRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_ZAFRA)
            Me.columnCONTRA_AREA = New Global.System.Data.DataColumn("CONTRA_AREA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTRA_AREA)
            Me.columnCONTRA_TC = New Global.System.Data.DataColumn("CONTRA_TC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTRA_TC)
            Me.columnCONTRA_TC_MZ = New Global.System.Data.DataColumn("CONTRA_TC_MZ", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTRA_TC_MZ)
            Me.columnCONTRA_LBS_TC = New Global.System.Data.DataColumn("CONTRA_LBS_TC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTRA_LBS_TC)
            Me.columnEJEC_AREA = New Global.System.Data.DataColumn("EJEC_AREA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEJEC_AREA)
            Me.columnEJEC_TC = New Global.System.Data.DataColumn("EJEC_TC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEJEC_TC)
            Me.columnEJEC_TC_MZ = New Global.System.Data.DataColumn("EJEC_TC_MZ", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEJEC_TC_MZ)
            Me.columnEJEC_LBS_TC = New Global.System.Data.DataColumn("EJEC_LBS_TC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEJEC_LBS_TC)
            Me.columnSEMILLA_TC = New Global.System.Data.DataColumn("SEMILLA_TC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEMILLA_TC)
            Me.columnPRODUCTOR = New Global.System.Data.DataColumn("PRODUCTOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTOR)
            Me.columnLOTE_PROPIO = New Global.System.Data.DataColumn("LOTE_PROPIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOTE_PROPIO)
            Me.columnLOTE_ARRENDADO = New Global.System.Data.DataColumn("LOTE_ARRENDADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOTE_ARRENDADO)
            Me.columnOBSERVACIONES = New Global.System.Data.DataColumn("OBSERVACIONES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSERVACIONES)
            Me.columnID_MAESTRO.AllowDBNull = false
            Me.columnDEPARTAMENTO.ReadOnly = true
            Me.columnMUNICIPIO.ReadOnly = true
            Me.columnCANTON.ReadOnly = true
            Me.columnCODIPROVEEDOR.ReadOnly = true
            Me.columnNO_CONTRATO.ReadOnly = true
            Me.columnVIGENTE.ReadOnly = true
            Me.columnZAFRA_INICIO.ReadOnly = true
            Me.columnZAFRA_FIN.ReadOnly = true
            Me.columnHACIENDA.ReadOnly = true
            Me.columnVARIEDAD.ReadOnly = true
            Me.columnTIPO_SIEMBRA.ReadOnly = true
            Me.columnEPOCA_SIEMBRA.ReadOnly = true
            Me.columnSIEMBRA_MANUAL.ReadOnly = true
            Me.columnSIEMBRA_MECANI.ReadOnly = true
            Me.columnORIGEN_CANA.ReadOnly = true
            Me.columnTIPO_SUELO.ReadOnly = true
            Me.columnPRODUC_TIPO_SUELO.ReadOnly = true
            Me.columnRIESGO_PIEDRA.ReadOnly = true
            Me.columnACCESO_PROPIO.ReadOnly = true
            Me.columnREPARA_HABILITA.ReadOnly = true
            Me.columnFRENTE_ROZA.ReadOnly = true
            Me.columnTIERRA_BALASTRE.ReadOnly = true
            Me.columnTECNICO.ReadOnly = true
            Me.columnC_ZAFRA.ReadOnly = true
            Me.columnPRODUCTOR.ReadOnly = true
            Me.columnLOTE_PROPIO.ReadOnly = true
            Me.columnLOTE_ARRENDADO.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewFICHA_TECNICA_LOTERow() As FICHA_TECNICA_LOTERow
            Return CType(Me.NewRow,FICHA_TECNICA_LOTERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FICHA_TECNICA_LOTERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FICHA_TECNICA_LOTERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FICHA_TECNICA_LOTERowChangedEvent) Is Nothing) Then
                RaiseEvent FICHA_TECNICA_LOTERowChanged(Me, New FICHA_TECNICA_LOTERowChangeEvent(CType(e.Row,FICHA_TECNICA_LOTERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FICHA_TECNICA_LOTERowChangingEvent) Is Nothing) Then
                RaiseEvent FICHA_TECNICA_LOTERowChanging(Me, New FICHA_TECNICA_LOTERowChangeEvent(CType(e.Row,FICHA_TECNICA_LOTERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FICHA_TECNICA_LOTERowDeletedEvent) Is Nothing) Then
                RaiseEvent FICHA_TECNICA_LOTERowDeleted(Me, New FICHA_TECNICA_LOTERowChangeEvent(CType(e.Row,FICHA_TECNICA_LOTERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FICHA_TECNICA_LOTERowDeletingEvent) Is Nothing) Then
                RaiseEvent FICHA_TECNICA_LOTERowDeleting(Me, New FICHA_TECNICA_LOTERowChangeEvent(CType(e.Row,FICHA_TECNICA_LOTERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveFICHA_TECNICA_LOTERow(ByVal row As FICHA_TECNICA_LOTERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_SISTAGRI = New DS_SISTAGRI()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FICHA_TECNICA_LOTEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FICHA_TECNICA_LOTERow
        Inherits Global.System.Data.DataRow
        
        Private tableFICHA_TECNICA_LOTE As FICHA_TECNICA_LOTEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFICHA_TECNICA_LOTE = CType(Me.Table,FICHA_TECNICA_LOTEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ID_MAESTRO() As Integer
            Get
                Return CType(Me(Me.tableFICHA_TECNICA_LOTE.ID_MAESTROColumn),Integer)
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.ID_MAESTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DEPARTAMENTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.DEPARTAMENTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DEPARTAMENTO' de la tabla 'FICHA_TECNICA_LOTE' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.DEPARTAMENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MUNICIPIO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.MUNICIPIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MUNICIPIO' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.MUNICIPIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CANTON() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.CANTONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTON' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.CANTONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ZONA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.ZONAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ZONA' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.ZONAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SUB_ZONA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.SUB_ZONAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SUB_ZONA' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.SUB_ZONAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CODIPROVEEDOR() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.CODIPROVEEDORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CODIPROVEEDOR' de la tabla 'FICHA_TECNICA_LOTE' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.CODIPROVEEDORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CORRELATIVO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.CORRELATIVOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CORRELATIVO' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.CORRELATIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NOMBRE_LOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.NOMBRE_LOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NOMBRE_LOTE' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.NOMBRE_LOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NO_CONTRATO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.NO_CONTRATOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NO_CONTRATO' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.NO_CONTRATOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property VIGENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.VIGENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'VIGENTE' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.VIGENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ZAFRA_INICIO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.ZAFRA_INICIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ZAFRA_INICIO' de la tabla 'FICHA_TECNICA_LOTE' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.ZAFRA_INICIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ZAFRA_FIN() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.ZAFRA_FINColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ZAFRA_FIN' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.ZAFRA_FINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AREA_TOTAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.AREA_TOTALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'AREA_TOTAL' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.AREA_TOTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AREA_CULTIVA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.AREA_CULTIVAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'AREA_CULTIVA' de la tabla 'FICHA_TECNICA_LOTE' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.AREA_CULTIVAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TC_MZ() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.TC_MZColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TC_MZ' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.TC_MZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LBS_TC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.LBS_TCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'LBS_TC' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.LBS_TCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property HACIENDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.HACIENDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'HACIENDA' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.HACIENDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property VIGENCIA_ARREND() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.VIGENCIA_ARRENDColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'VIGENCIA_ARREND' de la tabla 'FICHA_TECNICA_LOTE' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.VIGENCIA_ARRENDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property VARIEDAD() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.VARIEDADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'VARIEDAD' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.VARIEDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CICLO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.CICLOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CICLO' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.CICLOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TIPO_SIEMBRA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.TIPO_SIEMBRAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPO_SIEMBRA' de la tabla 'FICHA_TECNICA_LOTE' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.TIPO_SIEMBRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EPOCA_SIEMBRA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.EPOCA_SIEMBRAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EPOCA_SIEMBRA' de la tabla 'FICHA_TECNICA_LOTE' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.EPOCA_SIEMBRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SIEMBRA_MANUAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.SIEMBRA_MANUALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SIEMBRA_MANUAL' de la tabla 'FICHA_TECNICA_LOTE' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.SIEMBRA_MANUALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SIEMBRA_MECANI() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.SIEMBRA_MECANIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SIEMBRA_MECANI' de la tabla 'FICHA_TECNICA_LOTE' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.SIEMBRA_MECANIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ORIGEN_CANA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.ORIGEN_CANAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ORIGEN_CANA' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.ORIGEN_CANAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PORC_DESPOBLACION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.PORC_DESPOBLACIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PORC_DESPOBLACION' de la tabla 'FICHA_TECNICA_LOTE' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.PORC_DESPOBLACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FECULT_RESIEMBRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.FECULT_RESIEMBRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECULT_RESIEMBRA' de la tabla 'FICHA_TECNICA_LOTE' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.FECULT_RESIEMBRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TOTAL_MZS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.TOTAL_MZSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTAL_MZS' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.TOTAL_MZSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TIPO_SUELO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.TIPO_SUELOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPO_SUELO' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.TIPO_SUELOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PRODUC_TIPO_SUELO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.PRODUC_TIPO_SUELOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PRODUC_TIPO_SUELO' de la tabla 'FICHA_TECNICA_LOTE' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.PRODUC_TIPO_SUELOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MSNM() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.MSNMColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MSNM' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.MSNMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FECULT_SIEMBRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.FECULT_SIEMBRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECULT_SIEMBRA' de la tabla 'FICHA_TECNICA_LOTE' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.FECULT_SIEMBRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FEPROX_SIEMBRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.FEPROX_SIEMBRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FEPROX_SIEMBRA' de la tabla 'FICHA_TECNICA_LOTE' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.FEPROX_SIEMBRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FECULT_CORTE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.FECULT_CORTEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECULT_CORTE' de la tabla 'FICHA_TECNICA_LOTE' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.FECULT_CORTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FECPROX_CORTE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.FECPROX_CORTEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECPROX_CORTE' de la tabla 'FICHA_TECNICA_LOTE' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.FECPROX_CORTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RIESGO_PIEDRA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.RIESGO_PIEDRAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RIESGO_PIEDRA' de la tabla 'FICHA_TECNICA_LOTE' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.RIESGO_PIEDRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ACCESO_PROPIO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.ACCESO_PROPIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ACCESO_PROPIO' de la tabla 'FICHA_TECNICA_LOTE' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.ACCESO_PROPIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property REPARA_HABILITA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.REPARA_HABILITAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'REPARA_HABILITA' de la tabla 'FICHA_TECNICA_LOTE' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.REPARA_HABILITAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property COSECHA_MANUAL_MZ() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.COSECHA_MANUAL_MZColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COSECHA_MANUAL_MZ' de la tabla 'FICHA_TECNICA_LOTE' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.COSECHA_MANUAL_MZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FRENTE_ROZA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.FRENTE_ROZAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FRENTE_ROZA' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.FRENTE_ROZAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property COSECHA_MECANI_MZ() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.COSECHA_MECANI_MZColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COSECHA_MECANI_MZ' de la tabla 'FICHA_TECNICA_LOTE' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.COSECHA_MECANI_MZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property COSECHA_QUEMA_MZ() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.COSECHA_QUEMA_MZColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COSECHA_QUEMA_MZ' de la tabla 'FICHA_TECNICA_LOTE' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.COSECHA_QUEMA_MZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property COSECHA_VERDE_MZ() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.COSECHA_VERDE_MZColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COSECHA_VERDE_MZ' de la tabla 'FICHA_TECNICA_LOTE' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.COSECHA_VERDE_MZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CAT_CANA_LARGA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.CAT_CANA_LARGAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CAT_CANA_LARGA' de la tabla 'FICHA_TECNICA_LOTE' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.CAT_CANA_LARGAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TARIFA_ROZA_MANUAL_TC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.TARIFA_ROZA_MANUAL_TCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TARIFA_ROZA_MANUAL_TC' de la tabla 'FICHA_TECNICA_LOTE' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.TARIFA_ROZA_MANUAL_TCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TARIFA_ALZA_TC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.TARIFA_ALZA_TCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TARIFA_ALZA_TC' de la tabla 'FICHA_TECNICA_LOTE' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.TARIFA_ALZA_TCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TARIFA_TRANSP_LARGA_TC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.TARIFA_TRANSP_LARGA_TCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TARIFA_TRANSP_LARGA_TC' de la tabla 'FICHA_TECNICA_LOTE' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.TARIFA_TRANSP_LARGA_TCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CAT_CANA_MECA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.CAT_CANA_MECAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CAT_CANA_MECA' de la tabla 'FICHA_TECNICA_LOTE' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.CAT_CANA_MECAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TARIFA_COSECHADORA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.TARIFA_COSECHADORAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TARIFA_COSECHADORA' de la tabla 'FICHA_TECNICA_LOTE' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.TARIFA_COSECHADORAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TARIFA_TRANSP_MECA_TC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.TARIFA_TRANSP_MECA_TCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TARIFA_TRANSP_MECA_TC' de la tabla 'FICHA_TECNICA_LOTE' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.TARIFA_TRANSP_MECA_TCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DISTANCIA_KMS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.DISTANCIA_KMSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DISTANCIA_KMS' de la tabla 'FICHA_TECNICA_LOTE' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.DISTANCIA_KMSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PAVIMENTADA_KMS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.PAVIMENTADA_KMSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PAVIMENTADA_KMS' de la tabla 'FICHA_TECNICA_LOTE' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.PAVIMENTADA_KMSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TIERRA_BALASTRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.TIERRA_BALASTREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIERRA_BALASTRE' de la tabla 'FICHA_TECNICA_LOTE' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.TIERRA_BALASTREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TECNICO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.TECNICOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TECNICO' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.TECNICOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property C_ZAFRA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.C_ZAFRAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'C_ZAFRA' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.C_ZAFRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CONTRA_AREA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.CONTRA_AREAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CONTRA_AREA' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.CONTRA_AREAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CONTRA_TC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.CONTRA_TCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CONTRA_TC' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.CONTRA_TCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CONTRA_TC_MZ() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.CONTRA_TC_MZColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CONTRA_TC_MZ' de la tabla 'FICHA_TECNICA_LOTE' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.CONTRA_TC_MZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CONTRA_LBS_TC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.CONTRA_LBS_TCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CONTRA_LBS_TC' de la tabla 'FICHA_TECNICA_LOTE' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.CONTRA_LBS_TCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EJEC_AREA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.EJEC_AREAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EJEC_AREA' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.EJEC_AREAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EJEC_TC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.EJEC_TCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EJEC_TC' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.EJEC_TCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EJEC_TC_MZ() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.EJEC_TC_MZColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EJEC_TC_MZ' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.EJEC_TC_MZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EJEC_LBS_TC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.EJEC_LBS_TCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EJEC_LBS_TC' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.EJEC_LBS_TCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SEMILLA_TC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.SEMILLA_TCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SEMILLA_TC' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.SEMILLA_TCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PRODUCTOR() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.PRODUCTORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PRODUCTOR' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.PRODUCTORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LOTE_PROPIO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.LOTE_PROPIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'LOTE_PROPIO' de la tabla 'FICHA_TECNICA_LOTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.LOTE_PROPIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LOTE_ARRENDADO() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.LOTE_ARRENDADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'LOTE_ARRENDADO' de la tabla 'FICHA_TECNICA_LOTE' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.LOTE_ARRENDADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OBSERVACIONES() As String
            Get
                Try 
                    Return CType(Me(Me.tableFICHA_TECNICA_LOTE.OBSERVACIONESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OBSERVACIONES' de la tabla 'FICHA_TECNICA_LOTE' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableFICHA_TECNICA_LOTE.OBSERVACIONESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDEPARTAMENTONull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.DEPARTAMENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDEPARTAMENTONull()
            Me(Me.tableFICHA_TECNICA_LOTE.DEPARTAMENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMUNICIPIONull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.MUNICIPIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMUNICIPIONull()
            Me(Me.tableFICHA_TECNICA_LOTE.MUNICIPIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCANTONNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.CANTONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCANTONNull()
            Me(Me.tableFICHA_TECNICA_LOTE.CANTONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsZONANull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.ZONAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetZONANull()
            Me(Me.tableFICHA_TECNICA_LOTE.ZONAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSUB_ZONANull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.SUB_ZONAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSUB_ZONANull()
            Me(Me.tableFICHA_TECNICA_LOTE.SUB_ZONAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCODIPROVEEDORNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.CODIPROVEEDORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCODIPROVEEDORNull()
            Me(Me.tableFICHA_TECNICA_LOTE.CODIPROVEEDORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCORRELATIVONull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.CORRELATIVOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCORRELATIVONull()
            Me(Me.tableFICHA_TECNICA_LOTE.CORRELATIVOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNOMBRE_LOTENull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.NOMBRE_LOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNOMBRE_LOTENull()
            Me(Me.tableFICHA_TECNICA_LOTE.NOMBRE_LOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNO_CONTRATONull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.NO_CONTRATOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNO_CONTRATONull()
            Me(Me.tableFICHA_TECNICA_LOTE.NO_CONTRATOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsVIGENTENull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.VIGENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetVIGENTENull()
            Me(Me.tableFICHA_TECNICA_LOTE.VIGENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsZAFRA_INICIONull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.ZAFRA_INICIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetZAFRA_INICIONull()
            Me(Me.tableFICHA_TECNICA_LOTE.ZAFRA_INICIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsZAFRA_FINNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.ZAFRA_FINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetZAFRA_FINNull()
            Me(Me.tableFICHA_TECNICA_LOTE.ZAFRA_FINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAREA_TOTALNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.AREA_TOTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAREA_TOTALNull()
            Me(Me.tableFICHA_TECNICA_LOTE.AREA_TOTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAREA_CULTIVANull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.AREA_CULTIVAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAREA_CULTIVANull()
            Me(Me.tableFICHA_TECNICA_LOTE.AREA_CULTIVAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTC_MZNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.TC_MZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTC_MZNull()
            Me(Me.tableFICHA_TECNICA_LOTE.TC_MZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLBS_TCNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.LBS_TCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLBS_TCNull()
            Me(Me.tableFICHA_TECNICA_LOTE.LBS_TCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHACIENDANull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.HACIENDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHACIENDANull()
            Me(Me.tableFICHA_TECNICA_LOTE.HACIENDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsVIGENCIA_ARRENDNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.VIGENCIA_ARRENDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetVIGENCIA_ARRENDNull()
            Me(Me.tableFICHA_TECNICA_LOTE.VIGENCIA_ARRENDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsVARIEDADNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.VARIEDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetVARIEDADNull()
            Me(Me.tableFICHA_TECNICA_LOTE.VARIEDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCICLONull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.CICLOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCICLONull()
            Me(Me.tableFICHA_TECNICA_LOTE.CICLOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTIPO_SIEMBRANull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.TIPO_SIEMBRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTIPO_SIEMBRANull()
            Me(Me.tableFICHA_TECNICA_LOTE.TIPO_SIEMBRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEPOCA_SIEMBRANull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.EPOCA_SIEMBRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEPOCA_SIEMBRANull()
            Me(Me.tableFICHA_TECNICA_LOTE.EPOCA_SIEMBRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSIEMBRA_MANUALNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.SIEMBRA_MANUALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSIEMBRA_MANUALNull()
            Me(Me.tableFICHA_TECNICA_LOTE.SIEMBRA_MANUALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSIEMBRA_MECANINull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.SIEMBRA_MECANIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSIEMBRA_MECANINull()
            Me(Me.tableFICHA_TECNICA_LOTE.SIEMBRA_MECANIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsORIGEN_CANANull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.ORIGEN_CANAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetORIGEN_CANANull()
            Me(Me.tableFICHA_TECNICA_LOTE.ORIGEN_CANAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPORC_DESPOBLACIONNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.PORC_DESPOBLACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPORC_DESPOBLACIONNull()
            Me(Me.tableFICHA_TECNICA_LOTE.PORC_DESPOBLACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFECULT_RESIEMBRANull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.FECULT_RESIEMBRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFECULT_RESIEMBRANull()
            Me(Me.tableFICHA_TECNICA_LOTE.FECULT_RESIEMBRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTOTAL_MZSNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.TOTAL_MZSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTOTAL_MZSNull()
            Me(Me.tableFICHA_TECNICA_LOTE.TOTAL_MZSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTIPO_SUELONull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.TIPO_SUELOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTIPO_SUELONull()
            Me(Me.tableFICHA_TECNICA_LOTE.TIPO_SUELOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPRODUC_TIPO_SUELONull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.PRODUC_TIPO_SUELOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPRODUC_TIPO_SUELONull()
            Me(Me.tableFICHA_TECNICA_LOTE.PRODUC_TIPO_SUELOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMSNMNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.MSNMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMSNMNull()
            Me(Me.tableFICHA_TECNICA_LOTE.MSNMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFECULT_SIEMBRANull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.FECULT_SIEMBRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFECULT_SIEMBRANull()
            Me(Me.tableFICHA_TECNICA_LOTE.FECULT_SIEMBRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFEPROX_SIEMBRANull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.FEPROX_SIEMBRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFEPROX_SIEMBRANull()
            Me(Me.tableFICHA_TECNICA_LOTE.FEPROX_SIEMBRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFECULT_CORTENull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.FECULT_CORTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFECULT_CORTENull()
            Me(Me.tableFICHA_TECNICA_LOTE.FECULT_CORTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFECPROX_CORTENull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.FECPROX_CORTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFECPROX_CORTENull()
            Me(Me.tableFICHA_TECNICA_LOTE.FECPROX_CORTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRIESGO_PIEDRANull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.RIESGO_PIEDRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRIESGO_PIEDRANull()
            Me(Me.tableFICHA_TECNICA_LOTE.RIESGO_PIEDRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsACCESO_PROPIONull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.ACCESO_PROPIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetACCESO_PROPIONull()
            Me(Me.tableFICHA_TECNICA_LOTE.ACCESO_PROPIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsREPARA_HABILITANull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.REPARA_HABILITAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetREPARA_HABILITANull()
            Me(Me.tableFICHA_TECNICA_LOTE.REPARA_HABILITAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCOSECHA_MANUAL_MZNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.COSECHA_MANUAL_MZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCOSECHA_MANUAL_MZNull()
            Me(Me.tableFICHA_TECNICA_LOTE.COSECHA_MANUAL_MZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFRENTE_ROZANull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.FRENTE_ROZAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFRENTE_ROZANull()
            Me(Me.tableFICHA_TECNICA_LOTE.FRENTE_ROZAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCOSECHA_MECANI_MZNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.COSECHA_MECANI_MZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCOSECHA_MECANI_MZNull()
            Me(Me.tableFICHA_TECNICA_LOTE.COSECHA_MECANI_MZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCOSECHA_QUEMA_MZNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.COSECHA_QUEMA_MZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCOSECHA_QUEMA_MZNull()
            Me(Me.tableFICHA_TECNICA_LOTE.COSECHA_QUEMA_MZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCOSECHA_VERDE_MZNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.COSECHA_VERDE_MZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCOSECHA_VERDE_MZNull()
            Me(Me.tableFICHA_TECNICA_LOTE.COSECHA_VERDE_MZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCAT_CANA_LARGANull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.CAT_CANA_LARGAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCAT_CANA_LARGANull()
            Me(Me.tableFICHA_TECNICA_LOTE.CAT_CANA_LARGAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTARIFA_ROZA_MANUAL_TCNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.TARIFA_ROZA_MANUAL_TCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTARIFA_ROZA_MANUAL_TCNull()
            Me(Me.tableFICHA_TECNICA_LOTE.TARIFA_ROZA_MANUAL_TCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTARIFA_ALZA_TCNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.TARIFA_ALZA_TCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTARIFA_ALZA_TCNull()
            Me(Me.tableFICHA_TECNICA_LOTE.TARIFA_ALZA_TCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTARIFA_TRANSP_LARGA_TCNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.TARIFA_TRANSP_LARGA_TCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTARIFA_TRANSP_LARGA_TCNull()
            Me(Me.tableFICHA_TECNICA_LOTE.TARIFA_TRANSP_LARGA_TCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCAT_CANA_MECANull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.CAT_CANA_MECAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCAT_CANA_MECANull()
            Me(Me.tableFICHA_TECNICA_LOTE.CAT_CANA_MECAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTARIFA_COSECHADORANull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.TARIFA_COSECHADORAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTARIFA_COSECHADORANull()
            Me(Me.tableFICHA_TECNICA_LOTE.TARIFA_COSECHADORAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTARIFA_TRANSP_MECA_TCNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.TARIFA_TRANSP_MECA_TCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTARIFA_TRANSP_MECA_TCNull()
            Me(Me.tableFICHA_TECNICA_LOTE.TARIFA_TRANSP_MECA_TCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDISTANCIA_KMSNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.DISTANCIA_KMSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDISTANCIA_KMSNull()
            Me(Me.tableFICHA_TECNICA_LOTE.DISTANCIA_KMSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPAVIMENTADA_KMSNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.PAVIMENTADA_KMSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPAVIMENTADA_KMSNull()
            Me(Me.tableFICHA_TECNICA_LOTE.PAVIMENTADA_KMSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTIERRA_BALASTRENull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.TIERRA_BALASTREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTIERRA_BALASTRENull()
            Me(Me.tableFICHA_TECNICA_LOTE.TIERRA_BALASTREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTECNICONull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.TECNICOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTECNICONull()
            Me(Me.tableFICHA_TECNICA_LOTE.TECNICOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsC_ZAFRANull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.C_ZAFRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetC_ZAFRANull()
            Me(Me.tableFICHA_TECNICA_LOTE.C_ZAFRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCONTRA_AREANull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.CONTRA_AREAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCONTRA_AREANull()
            Me(Me.tableFICHA_TECNICA_LOTE.CONTRA_AREAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCONTRA_TCNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.CONTRA_TCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCONTRA_TCNull()
            Me(Me.tableFICHA_TECNICA_LOTE.CONTRA_TCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCONTRA_TC_MZNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.CONTRA_TC_MZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCONTRA_TC_MZNull()
            Me(Me.tableFICHA_TECNICA_LOTE.CONTRA_TC_MZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCONTRA_LBS_TCNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.CONTRA_LBS_TCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCONTRA_LBS_TCNull()
            Me(Me.tableFICHA_TECNICA_LOTE.CONTRA_LBS_TCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEJEC_AREANull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.EJEC_AREAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEJEC_AREANull()
            Me(Me.tableFICHA_TECNICA_LOTE.EJEC_AREAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEJEC_TCNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.EJEC_TCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEJEC_TCNull()
            Me(Me.tableFICHA_TECNICA_LOTE.EJEC_TCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEJEC_TC_MZNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.EJEC_TC_MZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEJEC_TC_MZNull()
            Me(Me.tableFICHA_TECNICA_LOTE.EJEC_TC_MZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEJEC_LBS_TCNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.EJEC_LBS_TCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEJEC_LBS_TCNull()
            Me(Me.tableFICHA_TECNICA_LOTE.EJEC_LBS_TCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSEMILLA_TCNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.SEMILLA_TCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSEMILLA_TCNull()
            Me(Me.tableFICHA_TECNICA_LOTE.SEMILLA_TCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPRODUCTORNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.PRODUCTORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPRODUCTORNull()
            Me(Me.tableFICHA_TECNICA_LOTE.PRODUCTORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLOTE_PROPIONull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.LOTE_PROPIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLOTE_PROPIONull()
            Me(Me.tableFICHA_TECNICA_LOTE.LOTE_PROPIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLOTE_ARRENDADONull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.LOTE_ARRENDADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLOTE_ARRENDADONull()
            Me(Me.tableFICHA_TECNICA_LOTE.LOTE_ARRENDADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOBSERVACIONESNull() As Boolean
            Return Me.IsNull(Me.tableFICHA_TECNICA_LOTE.OBSERVACIONESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOBSERVACIONESNull()
            Me(Me.tableFICHA_TECNICA_LOTE.OBSERVACIONESColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class FICHA_TECNICA_LOTERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FICHA_TECNICA_LOTERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As FICHA_TECNICA_LOTERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As FICHA_TECNICA_LOTERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DS_SISTAGRITableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FICHA_TECNICA_LOTETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FICHA_TECNICA_LOTE"
            tableMapping.ColumnMappings.Add("ID_MAESTRO", "ID_MAESTRO")
            tableMapping.ColumnMappings.Add("DEPARTAMENTO", "DEPARTAMENTO")
            tableMapping.ColumnMappings.Add("MUNICIPIO", "MUNICIPIO")
            tableMapping.ColumnMappings.Add("CANTON", "CANTON")
            tableMapping.ColumnMappings.Add("ZONA", "ZONA")
            tableMapping.ColumnMappings.Add("SUB_ZONA", "SUB_ZONA")
            tableMapping.ColumnMappings.Add("CODIPROVEEDOR", "CODIPROVEEDOR")
            tableMapping.ColumnMappings.Add("CORRELATIVO", "CORRELATIVO")
            tableMapping.ColumnMappings.Add("NOMBRE_LOTE", "NOMBRE_LOTE")
            tableMapping.ColumnMappings.Add("NO_CONTRATO", "NO_CONTRATO")
            tableMapping.ColumnMappings.Add("VIGENTE", "VIGENTE")
            tableMapping.ColumnMappings.Add("ZAFRA_INICIO", "ZAFRA_INICIO")
            tableMapping.ColumnMappings.Add("ZAFRA_FIN", "ZAFRA_FIN")
            tableMapping.ColumnMappings.Add("AREA_TOTAL", "AREA_TOTAL")
            tableMapping.ColumnMappings.Add("AREA_CULTIVA", "AREA_CULTIVA")
            tableMapping.ColumnMappings.Add("TC_MZ", "TC_MZ")
            tableMapping.ColumnMappings.Add("LBS_TC", "LBS_TC")
            tableMapping.ColumnMappings.Add("HACIENDA", "HACIENDA")
            tableMapping.ColumnMappings.Add("VIGENCIA_ARREND", "VIGENCIA_ARREND")
            tableMapping.ColumnMappings.Add("VARIEDAD", "VARIEDAD")
            tableMapping.ColumnMappings.Add("CICLO", "CICLO")
            tableMapping.ColumnMappings.Add("TIPO_SIEMBRA", "TIPO_SIEMBRA")
            tableMapping.ColumnMappings.Add("EPOCA_SIEMBRA", "EPOCA_SIEMBRA")
            tableMapping.ColumnMappings.Add("SIEMBRA_MANUAL", "SIEMBRA_MANUAL")
            tableMapping.ColumnMappings.Add("SIEMBRA_MECANI", "SIEMBRA_MECANI")
            tableMapping.ColumnMappings.Add("ORIGEN_CANA", "ORIGEN_CANA")
            tableMapping.ColumnMappings.Add("PORC_DESPOBLACION", "PORC_DESPOBLACION")
            tableMapping.ColumnMappings.Add("FECULT_RESIEMBRA", "FECULT_RESIEMBRA")
            tableMapping.ColumnMappings.Add("TOTAL_MZS", "TOTAL_MZS")
            tableMapping.ColumnMappings.Add("TIPO_SUELO", "TIPO_SUELO")
            tableMapping.ColumnMappings.Add("PRODUC_TIPO_SUELO", "PRODUC_TIPO_SUELO")
            tableMapping.ColumnMappings.Add("MSNM", "MSNM")
            tableMapping.ColumnMappings.Add("FECULT_SIEMBRA", "FECULT_SIEMBRA")
            tableMapping.ColumnMappings.Add("FEPROX_SIEMBRA", "FEPROX_SIEMBRA")
            tableMapping.ColumnMappings.Add("FECULT_CORTE", "FECULT_CORTE")
            tableMapping.ColumnMappings.Add("FECPROX_CORTE", "FECPROX_CORTE")
            tableMapping.ColumnMappings.Add("RIESGO_PIEDRA", "RIESGO_PIEDRA")
            tableMapping.ColumnMappings.Add("ACCESO_PROPIO", "ACCESO_PROPIO")
            tableMapping.ColumnMappings.Add("REPARA_HABILITA", "REPARA_HABILITA")
            tableMapping.ColumnMappings.Add("COSECHA_MANUAL_MZ", "COSECHA_MANUAL_MZ")
            tableMapping.ColumnMappings.Add("FRENTE_ROZA", "FRENTE_ROZA")
            tableMapping.ColumnMappings.Add("COSECHA_MECANI_MZ", "COSECHA_MECANI_MZ")
            tableMapping.ColumnMappings.Add("COSECHA_QUEMA_MZ", "COSECHA_QUEMA_MZ")
            tableMapping.ColumnMappings.Add("COSECHA_VERDE_MZ", "COSECHA_VERDE_MZ")
            tableMapping.ColumnMappings.Add("CAT_CANA_LARGA", "CAT_CANA_LARGA")
            tableMapping.ColumnMappings.Add("TARIFA_ROZA_MANUAL_TC", "TARIFA_ROZA_MANUAL_TC")
            tableMapping.ColumnMappings.Add("TARIFA_ALZA_TC", "TARIFA_ALZA_TC")
            tableMapping.ColumnMappings.Add("TARIFA_TRANSP_LARGA_TC", "TARIFA_TRANSP_LARGA_TC")
            tableMapping.ColumnMappings.Add("CAT_CANA_MECA", "CAT_CANA_MECA")
            tableMapping.ColumnMappings.Add("TARIFA_COSECHADORA", "TARIFA_COSECHADORA")
            tableMapping.ColumnMappings.Add("TARIFA_TRANSP_MECA_TC", "TARIFA_TRANSP_MECA_TC")
            tableMapping.ColumnMappings.Add("DISTANCIA_KMS", "DISTANCIA_KMS")
            tableMapping.ColumnMappings.Add("PAVIMENTADA_KMS", "PAVIMENTADA_KMS")
            tableMapping.ColumnMappings.Add("TIERRA_BALASTRE", "TIERRA_BALASTRE")
            tableMapping.ColumnMappings.Add("TECNICO", "TECNICO")
            tableMapping.ColumnMappings.Add("C_ZAFRA", "C_ZAFRA")
            tableMapping.ColumnMappings.Add("CONTRA_AREA", "CONTRA_AREA")
            tableMapping.ColumnMappings.Add("CONTRA_TC", "CONTRA_TC")
            tableMapping.ColumnMappings.Add("CONTRA_TC_MZ", "CONTRA_TC_MZ")
            tableMapping.ColumnMappings.Add("CONTRA_LBS_TC", "CONTRA_LBS_TC")
            tableMapping.ColumnMappings.Add("EJEC_AREA", "EJEC_AREA")
            tableMapping.ColumnMappings.Add("EJEC_TC", "EJEC_TC")
            tableMapping.ColumnMappings.Add("EJEC_TC_MZ", "EJEC_TC_MZ")
            tableMapping.ColumnMappings.Add("EJEC_LBS_TC", "EJEC_LBS_TC")
            tableMapping.ColumnMappings.Add("SEMILLA_TC", "SEMILLA_TC")
            tableMapping.ColumnMappings.Add("PRODUCTOR", "PRODUCTOR")
            tableMapping.ColumnMappings.Add("LOTE_PROPIO", "LOTE_PROPIO")
            tableMapping.ColumnMappings.Add("LOTE_ARRENDADO", "LOTE_ARRENDADO")
            tableMapping.ColumnMappings.Add("OBSERVACIONES", "OBSERVACIONES")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.SISPACAL.DL.My.MySettings.Default.cn
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"L.ID_MAESTRO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"(SELECT D.NOMBRE_DEPTO FROM DEPARTAMENTO D WHERE D.COD"& _ 
                "I_DEPTO = L.CODI_DEPTO) AS DEPARTAMENTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"(SELECT M.NOMBRE_MUNI FROM MUNICIPIO"& _ 
                " M WHERE M.CODI_DEPTO = L.CODI_DEPTO AND M.CODI_MUNI = L.CODI_MUNI) AS MUNICIPIO"& _ 
                ", "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"(SELECT N.NOMBRE_CANTON FROM CANTON N WHERE N.CODI_DEPTO = L.CODI_DEPTO AND"& _ 
                " N.CODI_MUNI = L.CODI_MUNI AND N.CODI_CANTON = L.CODI_CANTON) AS CANTON,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"L.ZON"& _ 
                "A, L.SUB_ZONA, dbo.QuitarFormatoCODIPROVEEDOR(L.CODIPROVEEDOR) AS CODIPROVEEDOR,"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"L.CORRELATIVO, L.NOMBRE_LOTE,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"(SELECT ISNULL(RTRIM(P.NOMBRES),'') + ' ' + "& _ 
                "ISNULL(RTRIM(P.APELLIDOS),'') FROM PROVEEDOR P WHERE P.CODIPROVEEDOR = L.CODIPRO"& _ 
                "VEEDOR) AS PRODUCTOR,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"(SELECT T.NO_CONTRATO FROM CONTRATO T WHERE T.CODICONTRA"& _ 
                "TO = L.CODICONTRATO) AS NO_CONTRATO,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"--CASE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"--WHEN (SELECT COUNT(1) FROM CON"& _ 
                "TRATO_ZAFRAS CZ, ZAFRA Z WHERE CZ.CODICONTRATO = L.CODICONTRATO AND CZ.ID_ZAFRA "& _ 
                "= Z.ID_ZAFRA AND Z.ACTIVA = 1 ) > 0 THEN 'SI'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"--ELSE '' "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"--END AS VIGENTE,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(9)&"CASE WHEN L.VIGENTE = 1 THEN 'SI' ELSE '' END AS VIGENTE,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"(SELECT Z.NOMBRE_ZA"& _ 
                "FRA FROM ZAFRA Z WHERE Z.ID_ZAFRA = L.ID_ZAFRA_INICIO) AS ZAFRA_INICIO,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"(SELEC"& _ 
                "T Z.NOMBRE_ZAFRA FROM ZAFRA Z WHERE Z.ID_ZAFRA = L.ID_ZAFRA_FIN) AS ZAFRA_FIN,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(9)&"AREA_TOTAL, AREA_CULTIVA, TC_MZ, LBS_TC, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"(SELECT T.NOMBRE_HACIENDA FROM AG_H"& _ 
                "ACIENDA T WHERE T.ID_HACIENDA = L.ID_HACIENDA) AS HACIENDA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"CASE WHEN L.ID_TIP"& _ 
                "O_DERECHO = 1 THEN 'SI' ELSE '' END AS LOTE_PROPIO,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"CASE WHEN L.ID_TIPO_DERECH"& _ 
                "O = 1 THEN 'SI' ELSE '' END AS LOTE_ARRENDADO,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"L.VIGENCIA_ARREND, (SELECT T.NO"& _ 
                "M_VARIEDAD FROM VARIEDAD T WHERE T.CODIVARIEDA = L.CODIVARIEDA) AS VARIEDAD,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"L"& _ 
                ".CICLO, (SELECT T.NOMBRE_TIPO_SIEMBRA FROM AG_TIPO_SIEMBRA T WHERE T.ID_TIPO_SIE"& _ 
                "MBRA = L.ID_TIPO_SIEMBRA) AS TIPO_SIEMBRA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"(SELECT T.NOMBRE_EPOCA_SIEMBRA FROM"& _ 
                " AG_EPOCA_SIEMBRA T WHERE T.ID_EPOCA_SIEMBRA = L.ID_EPOCA_SIEMBRA) AS EPOCA_SIEM"& _ 
                "BRA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"CASE WHEN L.ES_SIEMBRA_MANUAL = 1 THEN 'SI' ELSE 'NO' END AS SIEMBRA_MANU"& _ 
                "AL,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"CASE WHEN L.ES_SIEMBRA_MECANIZADA = 1 THEN 'SI' ELSE 'NO' END AS SIEMBRA_M"& _ 
                "ECANI,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"(SELECT T.NOMBRE_ORIGEN FROM AG_ORIGEN_CANA_SEMILLA T WHERE T.ID_ORIGEN"& _ 
                "_CANA = L.ID_ORIGEN_CANA) AS ORIGEN_CANA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"L.PORC_DESPOBLACION, L.FECULT_RESIEM"& _ 
                "BRA, L.TOTAL_MZS, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"(SELECT T.NOMBRE_TIPO_SUELO FROM TIPO_SUELO T WHERE T.COD_T"& _ 
                "IPO_SUELO = L.COD_TIPO_SUELO) AS TIPO_SUELO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"CASE WHEN L.PRODUC_TIPO_SUELO = "& _ 
                "'A' THEN 'ALTA' WHEN L.PRODUC_TIPO_SUELO = 'M' THEN 'MEDIA' WHEN L.PRODUC_TIPO_S"& _ 
                "UELO = 'B' THEN 'BAJA' ELSE  '' END PRODUC_TIPO_SUELO,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"L.MSNM, L.FECULT_SIEMBR"& _ 
                "A, L.FEPROX_SIEMBRA, L.FECULT_CORTE, L.FECPROX_CORTE,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"CASE WHEN L.RIESGO_PIEDR"& _ 
                "A = 1 THEN 'SI' ELSE 'NO' END AS RIESGO_PIEDRA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"CASE WHEN L.ACCESO_PROPIO = 1 "& _ 
                "THEN 'SI' ELSE 'NO' END AS ACCESO_PROPIO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"CASE WHEN L.REPARA_HABILITA = 1 THE"& _ 
                "N 'SI' ELSE 'NO' END AS REPARA_HABILITA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"L.COSECHA_MANUAL_MZ, CASE WHEN L.FRE"& _ 
                "NTE_ROZA_PROPIO = 1 THEN 'PROPIO' ELSE '' END AS FRENTE_ROZA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"L.COSECHA_MECANI"& _ 
                "_MZ, L.COSECHA_QUEMA_MZ, L.COSECHA_VERDE_MZ, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"L.CAT_CANA_LARGA, L.TARIFA_ROZA_"& _ 
                "MANUAL_TC, L.TARIFA_ALZA_TC, L.TARIFA_TRANSP_LARGA_TC, L.CAT_CANA_MECA, L.TARIFA"& _ 
                "_COSECHADORA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"L.TARIFA_TRANSP_MECA_TC, L.DISTANCIA_KMS, L.PAVIMENTADA_KMS,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"C"& _ 
                "ASE WHEN L.ES_TIERRA_BALAS = 1 THEN 'SI' ELSE 'NO' END AS TIERRA_BALASTRE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"(S"& _ 
                "ELECT A.NOMBRE_AGRONOMO FROM AGRONOMO A WHERE A.CODIAGRON = L.CODIAGRON) AS TECN"& _ 
                "ICO,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"(SELECT T.NOMBRE_ZAFRA FROM ZAFRA T WHERE T.ID_ZAFRA = C.ID_ZAFRA) AS C_Z"& _ 
                "AFRA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"C.CONTRA_AREA, C.CONTRA_TC, C.CONTRA_TC_MZ, C.CONTRA_LBS_TC,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"C.EJEC_AR"& _ 
                "EA, C.EJEC_TC, C.EJEC_TC_MZ, C.EJEC_LBS_TC, C.SEMILLA_TC,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"L.OBSERVACIONES"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM"& _ 
                " AG_LOTE L, AG_LOTE_CONTRATOS C"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE L.ID_MAESTRO = C.ID_MAESTRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND L.CODIPR"& _ 
                "OVEEDOR = 'XXXXX'"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "dbo.RPT_FICHA_TECNICA_LOTE"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIPROVEEDOR", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_SISTAGRI.FICHA_TECNICA_LOTEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_SISTAGRI.FICHA_TECNICA_LOTEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_SISTAGRI.FICHA_TECNICA_LOTEDataTable = New DS_SISTAGRI.FICHA_TECNICA_LOTEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillPorProveedor(ByVal dataTable As DS_SISTAGRI.FICHA_TECNICA_LOTEDataTable, ByVal CODIPROVEEDOR As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (CODIPROVEEDOR Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(CODIPROVEEDOR,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetPorProveedor(ByVal CODIPROVEEDOR As String) As DS_SISTAGRI.FICHA_TECNICA_LOTEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (CODIPROVEEDOR Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(CODIPROVEEDOR,String)
            End If
            Dim dataTable As DS_SISTAGRI.FICHA_TECNICA_LOTEDataTable = New DS_SISTAGRI.FICHA_TECNICA_LOTEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DS_SISTAGRI, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DS_SISTAGRI, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DS_SISTAGRI, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DS_SISTAGRI) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda"& _ 
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co"& _ 
                        "n las transacciones o el estado actual no permite que comience la transacción.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
